{"categories":[{"title":"Coding","uri":"https://stclass10904.github.io/site/categories/coding/"},{"title":"Life","uri":"https://stclass10904.github.io/site/categories/life/"},{"title":"Reading","uri":"https://stclass10904.github.io/site/categories/reading/"}],"posts":[{"content":"當天使穿著黑衣出現 讀後心得 第一次閱讀這種類型的書籍，一開始只是因為活動想蹭個免費書籍，在選贈送的書籍時挑了好久，原本想選一些技術類型的書，但大部分都因為年代久遠，追不上技術更迭的速度，因此想開始朝向心靈雞湯類型的方向尋找，找著找著，這特別的書名吸引了我，第一眼，一種黯然神傷的感覺油然而生，稍微看了下摘要後就決定應該讓這本書走進我的人生。\n父親 作者的父親，查爾斯．拉胥梅耶，出生於 1943 年，是一位精神分裂症患者。查爾斯的母親熱衷的信奉基督教科學箴言會，因此查爾斯在幼年時期接收到了許多不尋常的概念，比如說有一次查爾斯跌倒膝蓋受傷流血了，他的母親並不是去拿藥膏來抹上，而是要查爾斯去相信自己並沒有受傷流血這件事，若是還在持續流血則會痛罵查爾斯不虔誠，查爾斯就是在這樣的思維下長大。幸虧查爾斯相當聰明伶俐，雖然家中灌輸的思維是如此不同，但他憑藉自己的勤奮，在學業上終有所成。在選擇攻讀社會學碩士班時，所有授課的教授都對他印象深刻，除了舉一反三之外，還會極力堅持自己的主見進而與教授爭辯，就是這樣的一個人，最後也理所當然順利的完成博士班學位並取得教授的名號。\n兒子 作者出生於 1969 年 12 月，在童年時期，作者與父親的關係相當要好，也看不出父親有甚麼異常的言行舉止，一直到 1981 年父母離異後，父子之間只能以書信溝通，漸漸的，書信往來不再頻繁，其中的一個主要原因是父親的信件中開始出現無厘頭的內容。在信件中，父親提到他深陷一場精心設計好的大型陰謀之中，在這陷阱中，竟連兒子(作者)也牽涉其中，作者在最後不堪其擾，在某次的信件中說道：「我不能活在你的世界，你也不能活在我的世界」。就是這麼一句話，切斷了兩人共有的世界。\n死訊以及追憶 1995 年 1 月，一位 51 歲的男子心臟病發，死於伯靈頓的一座公寓內，父親的死訊是經由當地的警官輾轉告知的，得知父親的消息後，作者開始翻閱舊有的信件，並開始想探明何時開始與父親走向決裂的關係，從父親的表哥、攻讀學位的教授、路邊餐館的服務員、精神病院的醫護生，甚至是街道旁的街友們，逐一拜訪詢問他們與父親間的關係，漸漸的，作者了解到父親一直在努力不懈的對抗這個世界，即使流落接到遭人唾棄，他也持續在抗爭著，曾經有一封父親寫給作者的信，信中提及「無論環境多麼險惡－我的環境就一直非常險惡－永遠沒有理由放棄」。作者知道，父親一直在奮鬥著，曾經也許出現過幫助父親的契機點，但他當時不知道。\n 總結 第一次閱讀此類型的書籍，雖然現在已經有比較好的藥物可治療精神疾病，但藉由作者的故事，讓我稍微更能以同理心對待可能遇到的人事物，人們對於街友的冷漠屬實正常，也許我們不該隨意進入他們的世界，但當兩個世界有所交集時，讀完這本書的你也許能夠以更多的平常心去面對。\n","id":0,"section":"posts","summary":"當天使穿著黑衣出現 讀後心得 第一次閱讀這種類型的書籍，一開始只是因為活動想蹭個免費書籍，在選贈送的書籍時挑了好久，原本想選一些技術類型的書，但","tags":["read"],"title":"Reading – 當天使穿著黑衣出現","uri":"https://stclass10904.github.io/site/2021/03/2021-03-01-reading-e795b6e5a4a9e4bdbfe7a9bfe89197e9bb91e8a1a3e587bae78fbe/","year":"2021"},{"content":"前述 不知不覺，艱困的 2020 也即將到了尾聲，以往的這時間都會想做一件事情：為新的一年計劃要達成哪些事情。今年，一樣要為明年的自己先打個強心針。\n在今年 10 月份的時候，開始利用 Trello 專案管理的工作來安排及記錄工作上的事宜，搭配之前閱讀《最有生產力的一年》一書中所提供的方法，漸漸的，原先雜亂無章的工作生活開始出現一點變化。首先是專案時程規劃上的準確度有提升的現象，一開始向使用者所預估的交付時間經常是過多或過少，現在預估的時間誤差約可落在一個禮拜內。再來，由於一天要做的事情已經大致有個底，雖然待辦事項依然堆積如山，但在工作的心態上卻有更踏實的感受。最後，由於每個月所完成的事項皆有紀錄，遇到的問題以及解決方法皆有跡可循，這些事情也能夠以自己的方法將其統整起來，在面對下次使用者的相關提問時，也不用再回去看程式邏輯，寶貴的時間也因此省了下來。\n在工作上有個起步後，更是想盡早開始對自己展開一系列的進修，因為知道還有太多的知識空洞還沒填補。說是知識可能還太過分，在資訊爆炸的時代，特別是身在泥淖中的我們，有些我們經常聽到的名詞，實際上我們對他一竅不通，以手機照片來做比喻好了，焦距、光圈、像素、對比\u0026hellip;，這些詞彙時常繚繞於耳，真的都知道這些是甚麼嗎? 好吧，我必須承認我還不懂。諸如此類的事情很多，接下來的一年我希望能夠一件一件的搞懂並分享出來。\n為了有更多的時間學習，下班後的時間就是改變自己的第二生活。網路上有很多教導如何利用時間學習的書籍及影片，我也看過許多 youtuber 親身實踐的訪談，但每個人的狀況不一，就不特別推薦可以使用哪種方法進行學習\n至於想要分享這本書《下班後 1 小時的急速學習攻略》的原因，不是因為這本書提到的方法有多特別，而是述說進修時，在現實生活中會發生的心態問題，以及該用怎樣的心情去面對。\n 內文大綱 這本書不厚，不到 300 頁的內容中有 5 個章節，從事前的準備、規劃的方法、實踐的過程到心境上的變化，都有讓人耳目一新的片段，我覺得任何一位遇到學習瓶頸的人都可以參考看看。\n\u0026lt;code class=\u0026quot;language-text\u0026quot;\u0026gt;- 工作到失去人生方向，就重新開始學習 - 職場人的學習，從周末開始 - 最實際可行的職場人學習法 - 花最少時間、輕鬆通過考試的攻略 - 學習中的職場人必須具備的心態\u0026lt;/code\u0026gt;  作者談到，每個想要重新開始學習的人，都應該先想想以下問題，例如該怎麼做才能找到對自己人生有益的學習，以及什麼樣的目標和人生計畫可以改變人生。如何設定適當的目標，以及如何強化個人的意志力，是一需跨越的門檻。意志力是每個職場人最難保持的，每天下班回家後的疲憊及慵懶感該怎麼轉化，就會是每個想重新學習的人都應該要先練習的事。\n知道起步的心態該怎麼把持後，作者也隨即建議了幾種讀書法，包括準備考照的小技巧，這些方法及技巧其實在學習過程中我們很常聽到，只是看我們習慣使用哪種而已。倒是作者還提了一些不好的讀法，像是鉅細靡遺的理解每道題、純粹抄寫記憶法等，因為我們不是要成為這方面的專家，我們的目的在於通過考試或是吸取基本的知識，太過鑽牛角尖反而會花過多的時間，甚至可能因理解不了而造成反效果。曾經我在國高中的時候，經常使用抄寫法，藉由反覆的默誦以及寫字，大多都可以暫時應付早自習要考的英文單字，但也是經常因為沒睡飽，反而只是單純的在寫字，寫了一堆最後卻沒記住幾個單字，就會覺得好像在浪費時間。也許是因為作者在書內舉了好幾個這種類似的例子，且這些例子還真的是經常看見，我開始對作者的思想產生一點共鳴感，也許讀完這本書的你也會有這種感覺吧🤣\n在文末，作者整理了身為一個職場人，在職場上學習的過程中，所經歷(或者是別人的經歷)的事情，以及該怎麼去面對，我覺得這個章節對這本書具有畫龍點睛的效果，作者給的建議不是強求，是關懷。因為現在的我們都是職場人，在這樣的環境中學習並不容易，可能遭到同事間的臆測、家人的反感甚至是對自己的不信任，偶爾還會出現不能預期的事情打亂自己預定的學習進度，種種的問題更造就了所謂的低潮期等等。作者不是醫師，沒辦法用三言兩語就將我們的壓力解除，但在心境上，卻能夠讓我們加以借鏡。\n 後記 今年轉瞬即逝，希望明年的我們能夠愈來愈好。\n","id":1,"section":"posts","summary":"前述 不知不覺，艱困的 2020 也即將到了尾聲，以往的這時間都會想做一件事情：為新的一年計劃要達成哪些事情。今年，一樣要為明年的自己先打個強心針。 在今","tags":["life","read"],"title":"Reading – 下班後 1 小時的急速學習攻略","uri":"https://stclass10904.github.io/site/2020/12/2020-12-11-reading-e4b88be78fade5be8c-1-e5b08fe69982e79a84e680a5e9809fe5adb8e7bf92e694bbe795a5/","year":"2020"},{"content":"TANET 2020 參後心得 TANET (台灣網際網路研討會) 是台灣學術網路一年一度的盛會，今年適逢建置此研討會滿 30 週年，很榮幸一同參與，雖然沒有參加第一天的晚宴就是了 😂\n第一天上午 這次 TANET 舉辦地點主要位於台大綜合體育館 2、3 樓，疫情影響還是需要戴口罩及量測體溫才能入場，報到後會拿到參加證 (背面 QR Code 可幫不錯的論文評個分😅)\n為 TANET 2020 進行精彩開場的是 簡立峰博士，題目為：「AIoT 時代 台灣機會」雖然只有一小時的演講，但仍帶領我們以不同思維角度切入目前的發展機會，甚至在最後還提供在校學生一個具有市場潛力的未開發產品，實在令人打從心底稱讚。整場演講下來，令我印象最深的還是那句話「當我們在探討 A(I)、B(ig Data)、C(loud) 之前，應該反過來 CBA 打基礎才對」，你認同嗎?\n如果硬要說個美中不足的地方，應該就是這間會議廳太小了，為了聽博士的演講，導致原本就有參加 TANET 的先進竟然沒有座位可坐，希望未來的活動能稍稍注意。\n第一天下午 下午是論文發表時間，我主要是參加物聯網及 5G 相關應用的論文場次，比較有印象的是「應用氣體壓力感測裝置分析胸腹腔術後肺部訓練狀況」及「農業 AIoT 禽鳥驅離系統」這兩篇，讀者可以去找找此論文。\n 第二天上午 第二天時程較早，9:00 就開始聽 paper，我選擇「智慧校園、智慧城市、智慧家庭、智慧行動生活科技」這塊主題。\n裡面較有印象的題目是「智慧型社區門禁對講系統」。主講者是中華電信內的一位工程師，內容主要是說如何以最低成本去升級社區大樓的門禁對講機，使對講機擁有撥打社區市內電話的功能。情境：社區住戶朋友來訪，管理員可利用對講機與居民確認。筆者本身不住社區大樓，不知道這是否為一實用的功能🤔\n再來是第一堂專題演講，主題「從 AI 到智慧醫療」，主講者為 蔣榮先教授。內容重點不再於影像辨識技術有多厲害，而是在恰當的時機點把這套技術用上了。\n現在全球依舊壟罩在 Covid-19 陰影下，國外的醫院大部分依舊是人流不斷，每位醫生為了判定病人是否感染病毒，必須對病人的放射片進行一番研究，導致一位醫生每天能應付的病人有限，而現在只要把影像辨識技術應用於此，提醒醫師應該著重看的地方，就能大大減少判定時間，一天能處理的病人甚至可翻倍。\n第二場專題主題為「5G 商業應用與資安挑戰」，主講者為 康崇原副總經理。演講內容著重在 5G 目前的基礎建設發展。\n這場演講較多講到了軟硬體設施，但整場最讓我在意的是最後一位老師的提問：現場有許多優秀的後輩，但在校園內若想讓學生使用 5G 來做實驗，是否有較易的方式? 畢竟眾所皆知，目前 5G 設備並未廣設，所需的金額又是一筆龐大支出，假使有些校內的確建有 5G 線路，但實際能申請實驗的場域卻又少之又少，是否有其他建議可讓學生獲取相關知識?\n「去考取相關證照」，這是我聽到一個非常實際且迅速的回覆。5G 剛剛興起，網路上也不乏相關知識資源，若只是缺乏一動力，那考取證照的確是一個正向的建議，考取費用甚至能向 學校方面進行申請。\n第二天下午 下午接連 4 場 paper，聽得有點頭昏腦脹🥺，覺得較有趣的題目是「基於網頁模板的前後端整合框架：以 Vue.js 與 PHP 為例」與「自動監測系統結合 LINE 即時訊息通知 - 以桃園區網中心為例」，讀者可以去找找此論文。\n 第三天上午 只剩上午場了，最後一天我只打算聽兩場 paper 就打道回府，其中一場是區塊練應用，這場的主講者顯然是這方面的佼佼者，學生報完後的每個問題都直擊痛點，甚至直接說出了 \u0026ldquo;希望你朝另一個應用去發展\u0026rdquo; 這類的話(sweat)，不過這才是這種研討會應有的態度吧。\n這場本來對於「網頁回應時間與使用者感受之關聯性探討」這題目有點興趣，結果也只是拿舊題目出來講而已，頗失望。\n很快三天就過了，最有收穫的就屬 DDoS 相關知識的獲取吧。\n","id":2,"section":"posts","summary":"TANET 2020 參後心得 TANET (台灣網際網路研討會) 是台灣學術網路一年一度的盛會，今年適逢建置此研討會滿 30 週年，很榮幸一同參與，雖然沒有參加第一天的晚宴就是","tags":["life","TANET 2020"],"title":"TANET 2020 參後心得","uri":"https://stclass10904.github.io/site/2020/11/2020-11-02-tanet-2020-e58f83e5be8ce5bf83e5be97/","year":"2020"},{"content":"前述 這本書的作者為 佐佐木典士，是一位日本人。曾經的生活就跟大多數人一樣，是一位普通的上班族，家裡堆滿了許多雜物，雖然說是雜物，但對當時的他來說，這些東西「未來」是有可能會用到的，因此當時的他並沒有「丟掉」的想法。\n在某個機緣下，認識了沼畑直樹，也藉此觸碰到了極簡主義。在經過作者親身實踐一段時間後，這本書也就此問世。除了這本書之外，也能去逛逛他與沼畑共同經營的部落格，裡面分享了相當多的實務，裡面令我覺得最稱奇的地方是，幾乎所有人都覺得比過往的自己「更加幸福」。\n內文大綱 這本書主要在宣揚一個概念，「現在的你需要的是甚麼，不是未來的你可能需要的是甚麼」 。極簡主義沒有制式的規定，並不是說擁有超過一百項物品的人就不是極簡主義者，也不是說家裡有電視的人就不叫做極簡主義者，更不是說你的東西少到一個行李箱可以裝完的就稱為極簡主義者。你必須正視你的需求，到底有哪些是你真正不可或缺的。\n書中列舉了很多很多例子，就是這些想法，撞倒了我們的意志力，導致我們的私人物品愈來愈多，閱讀過這本書的你，是否也同意這些觀點呢，下面兩個例子是我非常同意的作者觀點：\n我們對一個陌生人最初的印象，除了談吐，就是看他擁有的自我價值物品。他穿的都是有品牌的衣服、開的車是跑車，基本上都會覺得他的生活一定是很美好。他擁有一整個房間大小的藏書，也會認為這個人一定博學多聞。因此，擁有更多物品，就更能展現自我價值。\n這台 PS4 那時可是花了 1w 多才買到的，那件衣服在當時可是最流行的款式，這個大衣櫃原料用的可是昂貴的原木呢。結果呢，一年才玩了 2 次 PS4，衣服則是因為穿起來覺得太熱只穿了一次，而衣櫃則是太大了，裡面根本沒幾件衣服。類似的事情一定也發生在你我身上，身為普羅大眾的我們捨不得丟掉的理由往往是因為，那時候可是花大錢買的呢。\n提及原因後，作者也提供了一種實際的作法，讓讀者在丟棄物品時不會那麼的心痛，那就是拍照、掃描這些物品。即使不能天長地久，至少曾經擁有。有時候，還是得直視這些雜物，看著這些一年用不到一次的物品，對自己來說真的有繼續存在的價值嗎?即使不能天長地久，至少曾經擁有。有時候，還是得直視這些雜物，看著這些一年用不到一次的物品，對自己來說真的有繼續存在的價值嗎? 倒不如換個形式留存吧。\n此書在後面還提及到一個重點，極簡主義並不該拿來與他人比較，當你決定了想要開始往極簡主義靠攏，那你尋求的就應該是心理的平靜，著手當下最重要的事情，而不是像解鎖了人生新成就一樣，這並不是一件值得拿來炫耀的事情。\n後記 極簡主義與收納主義是兩個極大差異的兩大理念，前者重視現在所需，後者重視空間利用。兩種主義都各有優劣，有的人的個性就是捨不得丟東西，任何東西皆有其故事以及感情，那麼利用有限的空間存放更多東西的收納主義，就會更加的適合這類個性的人。畢竟，擇其所愛嘛!\n回到這本書的核心概念，也許讀完這本書後的你也對此深有同感(要不怎麼會來翻這本書呢 😅)，因此急著開始整理要丟掉的東西，但請務必記得這本書一直在強調的，「現在的你需要的是甚麼，不是未來的你可能需要的是甚麼」，每個人一天都只有 24 小時，應該盡可能地把時間花在最重要的事情上，祝福你我都能從這套理論中獲得相應的禮物，獻上這本書中我最喜歡的一段引言。\n 工作不能代表你，\n 銀行存款不能代表你，\n你開的車不能代表你，\n你皮夾裡的東西也不能代表你，\n就連你身上穿的衣服品牌，\n也跟你毫無關係。\n—泰勒·德頓 (Tyler Durden)《鬥陣俱樂部》\n  ","id":3,"section":"posts","summary":"前述 這本書的作者為 佐佐木典士，是一位日本人。曾經的生活就跟大多數人一樣，是一位普通的上班族，家裡堆滿了許多雜物，雖然說是雜物，但對當時的他來","tags":["life","read"],"title":"Reading - 我決定簡單的生活","uri":"https://stclass10904.github.io/site/2020/09/2020-09-20-reading-e68891e6b1bae5ae9ae7b0a1e596aee79a84e7949fe6b4bb/","year":"2020"},{"content":"前述 這本書的作者為 Peter Su，是一位熱愛旅行的作家，在人生這趟旅途中，去過許多地方，也經歷過許多事情。這些他所經歷過的故事，轉化成了簡潔的文字，裡面有些句子使我相當有感觸，以此篇記錄。\n內文大綱 小東老家在好山好水(好無聊)的台東，在尚未到台北打拼之前，曾經逃家過，逃家期間住在搬來台東開拓事業的四位外地人家中，也兼職於他們的店舖。\n這四個人中的其中兩個，幫小東的逃家畫下了完美的句點。在告別過後，卻從此再也不能相見，因為他們的價值觀，被普羅大眾給拒絕了，我們用鄙視的眼神，唾棄的言語，讓他們不得不做出這種選擇\u0026hellip;\n2020 年 11 月第五個禮拜一，遠在異鄉的小東在凌晨 1:32 分時接到母親焦急的來電。隔天，搭著最早的第一班飛機回到台灣，直奔台東而去。也許是看到許久不見的彼此，掩飾不住的喜悅顯而易見。\n看到從加護病房出來的父親，鬆口氣的心情與悔恨大爆發了出來。他慶幸，上天留了一點時間給自己彌補過往的人生。他們一起旅行，看過紐西蘭的荒野高山，享受寂靜的夕陽湖畔，也說出了埋藏已久的心裡話。\n 原來生命中有許多人說了再見之後，便是一場最深遠的告別，\n 只是那時候的我們還不懂，這一次見面，就是最後一次了。\n   那個時候以為咬著牙堅持的人最勇敢，\n 長大之後才知道，\n懂得放下的人，或許才是最強大的。\n   遺憾的是，原本只需要一句話和一個擁抱就能和好的事，如今卻成了再也不見的陌生人。\n  不知道又隱藏了幾次悲傷，取代的都是臉頰上被擠出的笑痕，\n 是誰在耳邊對我說，你已經是個大人了，\n有些眼淚得流得不動聲色。\n那些笑得越是深刻，哭得才越是徹底。\n我說阿，長大真的是討人厭的過程。\n   陪伴，是一個人能給你的最大禮物。\n 每個人的時間都有限，也都有屬於它原本的價值；\n當一個人願意將有限的時間分給了你，\n也等同最珍貴的給予。\n即使只是那樣靜靜地待著，也是他的全世界。\n   如果生命的期限有可能就這樣擺在眼前，那或許，今天所得到的一切都是珍惜；因為明天和意外，不知道哪個會先出現，那在終點來臨之前，我們就大膽地再好好活一場吧。\n  長大了才知道，眼淚有三種。\n 小時候的我們，哭，是因為得不到；\n成長的過程，哭的是失去；\n後來的我們，哭，是因為懂了。\n   別沮喪，此刻所有的悲傷與不安，\n 都將換上未來你的一臉雲淡風輕。\n  其中，我最有印象的一句話  聽說幸福容易缺貨，如果你恰好有，請別亂揮霍。\n ","id":4,"section":"posts","summary":"前述 這本書的作者為 Peter Su，是一位熱愛旅行的作家，在人生這趟旅途中，去過許多地方，也經歷過許多事情。這些他所經歷過的故事，轉化成了簡潔的文字，","tags":["life","read"],"title":"Reading - 陪伴，是世上最奢侈的禮物","uri":"https://stclass10904.github.io/site/2020/09/2020-09-17-reading-e999aae4bcb4efbc8ce698afe4b896e4b88ae69c80e5a5a2e4be88e79a84e7a6aee789a9/","year":"2020"},{"content":"從零開始學 Vue - 模仿篇 載入必要的 js\n\u0026lt;code class=\u0026quot;language-js\u0026quot;\u0026gt;\u0026lt;!-- development version, includes helpful console warnings --\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt;  宣告式渲染 el 用來找 Html 的元素，data 則是用來存放變數的地方，只要 data 內的屬性 (ex: message) 有對應到 Html 上 {{ }} 內的變數，就會被及時渲染。\n驗證方法：開發人員工具 -\u0026gt; console -\u0026gt; 試著打 app.message = \u0026lsquo;Hello World\u0026rsquo;\n\u0026lt;code class=\u0026quot;language-html\u0026quot;\u0026gt;\u0026lt;div id=\u0026quot;app\u0026quot;\u0026gt; {{ message }} \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app = new Vue({ el: '#app', data: { message: 'Hello Vue!' } }); \u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt;  綁定 Html 元素屬性 在 Html 的標籤內只要加上了 v-bind，Vue 就會依據其綁定的屬性去做相應的效果，如下所示，只要滑鼠移置該文字，就會出現 Vue 所控制的 Title 內容\n\u0026lt;code class=\u0026quot;language-html\u0026quot;\u0026gt;\u0026lt;div id=\u0026quot;app-2\u0026quot;\u0026gt; \u0026lt;span v-bind:title=\u0026quot;message\u0026quot;\u0026gt; 請將滑鼠移置此文字 \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app2 = new Vue({ el: '#app-2', data: { message: '被滑過囉!' } }) \u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt;  條件以及迴圈 Vue 除了可以綁定元素的屬性之外，也能綁定 DOM 的結構，使用的方法為 v-if，若變數為 true，則顯示 Html\n這邊 Vue 處理的方式不是將 Html 多一個 Display: none 的屬性，而是將整個區塊註解，整體而言，隱密性相對更高\n\u0026lt;code class=\u0026quot;language-html\u0026quot;\u0026gt;\u0026lt;div id=\u0026quot;app-3\u0026quot;\u0026gt; \u0026lt;span v-if=\u0026quot;seen\u0026quot;\u0026gt;Now you see me\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app3 = new Vue({ el: '#app-3', data: { seen: true } }) \u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt;  除了隱藏區塊外，Vue 處理迴圈也是相當簡潔，相對於 HtmlHelper，在迴圈的處理上至少省去了三行以上 code 的撰寫，使用方法為 v-for\n\u0026lt;code class=\u0026quot;language-html\u0026quot;\u0026gt;\u0026lt;div id=\u0026quot;app-4\u0026quot;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;li v-for=\u0026quot;todo in todos\u0026quot;\u0026gt; {{ todo.text }} \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app4 = new Vue({ el: '#app-4', data: { todos: [ { text: 'Learn JavaScript' }, { text: 'Learn Vue' }, { text: 'Build something awesome' } ] } }) \u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt;  使用者的輸入處理 對於良好的互動設計，必定要對使用者在頁面上的各種操作做一些特殊的效果，例如跳出彈出式視窗、提醒輸入格式錯誤等等，因此我們需要撰寫各種監聽事件去處理相對應的效果\n對於 Vue，我們只需要在要監聽的 Html 元素上寫上 v-on:[event]，Vue js 就會去找在 method 底下相應的 function 執行\n\u0026lt;code class=\u0026quot;language-html\u0026quot;\u0026gt;\u0026lt;div id=\u0026quot;app-5\u0026quot;\u0026gt; \u0026lt;p\u0026gt;{{ message }}\u0026lt;/p\u0026gt; \u0026lt;button v-on:click=\u0026quot;reverseMessage\u0026quot;\u0026gt;Reverse Message\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app5 = new Vue({ el: '#app-5', data: { message: 'Hello Vue.js!' }, methods: { reverseMessage: function () { this.message = this.message.split('').reverse().join('') } } }) \u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt;  雙向繫結 Vue 同時也支援雙向綁定，在下面的例子中，只要輸入框的值改變，連同 p 標籤內的文字也會跟著改變，不需要再另外寫監聽或 change 事件 (Vue 已實作)\n\u0026lt;code class=\u0026quot;language-html\u0026quot;\u0026gt;\u0026lt;div id=\u0026quot;app-6\u0026quot;\u0026gt; \u0026lt;p\u0026gt;{{ message }}\u0026lt;/p\u0026gt; \u0026lt;input v-model=\u0026quot;message\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var app6 = new Vue({ el: '#app-6', data: { message: 'Hello Vue!' } }) \u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt;  下篇在繼續討論 Vue 很重要的一塊 - Component\n","id":5,"section":"posts","summary":"從零開始學 Vue - 模仿篇 載入必要的 js \u0026lt;code class=\u0026quot;language-js\u0026quot;\u0026gt;\u0026lt;!-- development version, includes helpful console warnings --\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\u0026lt;/code\u0026gt; 宣告式渲染 el 用來找 Html 的元素，data 則是用來存放變數的地方，只要 data 內的屬性 (ex: message) 有對應到","tags":["html","vue"],"title":"Vue - 從零開始學 Get Started","uri":"https://stclass10904.github.io/site/2020/09/2020-09-05-vue-e5be9ee99bb6e9968be5a78be5adb8-get-started/","year":"2020"},{"content":"前言 就目前來說，我覺得自己不管是在工作上或是在做自己的事情時，力不從心的感覺相當重，像是在浪費時間，效率低落，某個機緣下看到這本書後，心裡有種感覺，It\u0026rsquo;s time to change. 以此紀錄，也分享給有相同困擾的你。\n作者 Chris Bailey，他以自身做了一個為期一年的實驗，這期間他大量閱讀相關研究且親自進行數十種實驗，整個過程全紀錄於他的部落格，有興趣的讀者可以去看看最新的近況。\n 生產力 = 時間 + 專注力 + 精力 現在的工作型態愈趨多樣化，許多傳產逐漸被機械取代，使得我們必須更常使用大腦去解決問題，因此生產力要好，就要先找出哪些事情是最有價值、最該有高優先序的\n怎麼衡量生產力? 每天結束時，問自己一個很簡單的事情，今天完成了多少原訂的計畫，若有，則代表是具有生產力的\n假設今天你預計要去練球 2 小時，而且你真的有去練，那就是有生產力的，甚至是你今天預計要好好的放鬆一天，而你也如實的過了這一陣子最放鬆的一天，那也算是具有生產力的\n 「害怕做某件事所耗費的時間和精力，比真正做那件事本身還要多。」 - 艾米特定律 (Emmett\u0026rsquo;s law)\n 每個人都會怠惰 不管是上班還是上課，我總是會找個時間偷閒，划划手機解解任務。半小時過去了，書籤還在卡在目錄頁呢。這在我身上每天都會發生，我相信大多數的人也是。\n現在有許多的軟體或方法，比如「番茄時鐘法」或是利用一些套件，刻意不讓自己去使用 Facebook 或 Twitter 等，這些都是輔佐專注的好工具，但在使用這些工具的前提下，是該有動機去支持的，Chris 就非常推薦以下這種方法：\n三重點法則 提高生產力不是空話，Chris 非常提倡三重點法則，這個法則出自於《Getting Results the Agile Way》(敏捷人生) 這本書，由微軟商業課程經理邁耶(J.D.Meier)所著。我已經試著使用這個方法兩個禮拜了，真的有點後悔太晚看到這本書\u0026hellip;\n  每天一開始，把心念快轉到一天結束的時候，並問自己：當這一天結束，我希望做完哪三件事情?把這三件事情寫下來。\n  每週一開始，做上述同樣的動作。如此一來，妳所確認的這三件事情，將會是你這一天，以及這一週的焦點。\n  除了三重點法則，書中還推薦其他幾種方式，我選了 2 個我最常使用的：\n開個頭就對了 開個頭，即使只設定先做 10 分鐘，就結論來說還是有進度的，甚至會因為這個開頭，不知不覺就把這最討厭的事情給做完了一半，豈不美哉😏 😏 😏\n斷開網路吧 這真的是很艱難，即使是現在我也很難真的去實作，但我還是盡量試著，盡量讓自己去有一個念頭：先做正事吧！\n 如果你想變得更有生產力，那麼管理好經歷和專注力才是首要之務，時間管理反倒變得其次。\n 小小撇步，大大進步 在這本書扣人心弦，很大一部份的原因是因為跟自己的影子重疊了。對，懶惰似乎是天性沒有錯，但怎麼跟這小惡魔拔河並戰勝他，作者給出的方法真的是經濟又實惠！ 😍 😍 😍\n維修日，維修日，維修日 工作上、生活上有太多的瑣事，也許今天的你完成了十件事，但裡面有 9 件都與你最煩惱的那件事情無關，即使覺得今天的確是做了很多事情，但事實上，你自己最清楚這並沒有任何生產力，你只是把時間花在幾乎不用動腦但又可以消耗時間的事情上罷了，再想一下，這樣結束一天，真的是你最想要的嗎?\n把這種瑣事整理起來，訂個一天來解決這些事情，可能是洗衣服、拖地、繳費、剪指甲等等，一次解決這種大量的瑣事既省時又爽快！如果覺得這樣拖得太久，那當你覺得精神不好時，就來做這些事情吧。\n做的多不如做得少 簡化日常任務就是為了有高回報，在自己精神狀態最好的時候，你的時間不應該是拿來做瑣碎的事情，主管要的報表就是該在精神最好的時候去做，千萬不要被收信件、看新聞這種事情毀了你的一天，只有解決了最主要的煩惱，你的心情才會如釋重負，難道不是嗎?\n給其他人做吧 如果有辦法的話，試著把一些事情分出去吧。當然，我知道大部分的人都一樣只是個員工，我們不是老闆，不是主管，但如果你覺得你的部分業務是別人的主業務，試著去跟主管溝通看看，時間是自己去爭取來的！👊\n加強專注力的好方法 其實書中提到的方法非常簡單，簡單到大多數的人會認為這是在浪費時間，但我們不妨再仔細的沈思一下，我們所謂的「認為」真的有讓自己的生產力提高嗎?\n一次只做一件事 一次只做一件事情是馴服游移思緒、開鑿更多注意力空間給你手邊工作的理想方法。先想想下面這幾件事情，如果覺得半信半疑，何不試試看!\n  忙碌若不能讓你完成任何事情，那他跟懶散不做事又有甚麼區別\n  生產力與你忙碌的程度或有多少效能無關，他只跟你完成多少有關\n  單單只是因為你覺得有生產力，並不代表你真的有生產力。反之，儘管你富含生產力，你卻往往不覺得自己有生產力\n  冥想 這是作者直到現在都還是會做的事情，現在的我雖然不能領悟它的精髓，但冥想後，精神的確有變好，即使只做了短短幾分鐘的而已。\n 心得 小時候常會讀到「坐而言不如起而行」，但在現在的知識經濟社會體系裡面，只有開始做是不夠的，還必須有方法的做。每個人都有那公平的 24 小時，要怎麼完成生活上的各個任務且覺得踏實是現在大多數人都會遇到的課題，這本書提到的痛點是如此真實，解決的方法也是如此實際，真的很推這位作者的思維！ 👍 👍 👍\n","id":6,"section":"posts","summary":"前言 就目前來說，我覺得自己不管是在工作上或是在做自己的事情時，力不從心的感覺相當重，像是在浪費時間，效率低落，某個機緣下看到這本書後，心裡有","tags":["read"],"title":"Reading - 最有生產力的一年","uri":"https://stclass10904.github.io/site/2020/08/2020-08-26-reading-e69c80e69c89e7949fe794a2e58a9be79a84e4b880e5b9b4/","year":"2020"},{"content":"前言 一開始進入職場，總聽著前輩講些專業術語，啥也聽不懂只能傻笑，後來慢慢接觸一些專案後，開始理解這些術語背後是做了哪些事情，這邊稍微簡單整理一下對資料庫存取的技術 ADO.NET 與 Entity Framwork\nADO.NET ADO.NET 是 .NET Framework 原本就搭配在一起的資料存取法，能夠存取內部資料庫、外部系統或資源的資料\nADO.NET 實作了連線導向模式 (Connection-Oriented) 跟離線導向模式 (Connectionless-Oriented) ，前者必須先與資料庫連線後才能進行操作，而後者作法為連線資料庫後，先將資料存放到記憶體，然後離線資料庫，再操作記憶體內的資料。\n 連線導向模式 以下是一段簡短的 Sample code\n\u0026lt;code\u0026gt;public IEnumerable\u0026lt;Student\u0026gt; Get() { //* 資料庫連接字串封裝於 IDbConnection 介面 IDbConnection conn = new SqlConnection(this._connectionString); //* 指令須封裝在 IDbCommand 介面內 IDbCommand cmd = new SqlCommand(\u0026quot;SELECT * FROM STUDENT\u0026quot;); //* 開啟連線 cmd.Connection = conn; conn.Open(); //* ExecuteReader 會回傳 IDataReader 介面物件，且是唯讀不可修改的 IDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection | CommandBehavior.SingleResult); //* 取得資料 while(reader.Read()) { Student student = new Student() { StudNo = reader.GetValue(reader.GetOrdinal(\u0026quot;StudNo\u0026quot;)).ToString(), Name = reader.GetValue(reader.GetOrdinal(\u0026quot;Name\u0026quot;)).ToString(), Phone = reader.GetValue(reader.GetOrdinal(\u0026quot;Phone\u0026quot;)).ToString() }; yield return student; } //* 關閉連線 conn.Close(); } public void Update(Student student) { IDbConnection conn = new SqlConnection(this._connectionString); //* 以參數方式帶入，避免 SQL Injection 發生 IDbCommand cmd = new SqlCommand(@\u0026quot; UPDATE Student SET Name = @Name, Phone = @Phone WHERE StudNo = @StudNo\u0026quot;); cmd.Connection = conn; cmd.Parameters.Add(new SqlParameter(\u0026quot;@Name\u0026quot;, student.Name)); cmd.Parameters.Add(new SqlParameter(\u0026quot;@Phone\u0026quot;, student.Phone)); cmd.Parameters.Add(new SqlParameter(\u0026quot;@StudNo\u0026quot;, student.StudNo)); conn.Open(); cmd.ExecuteNonQuery(); conn.Close(); }\u0026lt;/code\u0026gt;   離線導向模式 以下是一段簡短的 Sample code\n\u0026lt;code\u0026gt;public Dataset Get() { using (SqlConnection connection = new SqlConnection(connectionString)) { string queryString = \u0026quot;SELECT * FROM Student\u0026quot;; //* 建立一連線導向的 SqlDataAdapter SqlDataAdapter adapter = new SqlDataAdapter(); adapter.SelectCommand = new SqlCommand(queryString, connection); //* 利用 Fill 將 adapter 的資料塞進 dataset/datatable 之中，可自定義名稱 //* 一拿到資料後 adapter 就會自動離線 DataSet dataset = new Dataset(); adapter.Fill(dataset, \u0026quot;myStudent\u0026quot;); return dataset; } }\u0026lt;/code\u0026gt;   小結 連線導向 離線導向\n","id":7,"section":"posts","summary":"前言 一開始進入職場，總聽著前輩講些專業術語，啥也聽不懂只能傻笑，後來慢慢接觸一些專案後，開始理解這些術語背後是做了哪些事情，這邊稍微簡單整理","tags":null,"title":"MVC - 淺談資料庫存取技術 ADO.NET 與 Entity Framework (上)","uri":"https://stclass10904.github.io/site/2020/06/2020-06-23-e38090mvce38091e8aa8de8ad98e8b387e69699e5baabe5ad98e58f96e68a80e8a193-ado-net-e88887-entity-framework-e4b88a/","year":"2020"},{"content":"第一次遇到此問題，紀錄一下 今天在接手一專案時，從 TFS 上對應本機後，出現下圖訊息\n錯誤訊息很明顯，因為專案的設定是會使用 IIS，但在本機上找不到，對比其他專案後發現，在專案檔 XXX.csproj 內有一處\n\u0026lt;code\u0026gt;\u0026lt;WebProjectProperties\u0026gt; \u0026lt;UseIIS\u0026gt;True\u0026lt;/UseIIS\u0026gt; \u0026lt;AutoAssignPort\u0026gt;True\u0026lt;/AutoAssignPort\u0026gt; \u0026lt;DevelopmentServerPort\u0026gt;1880\u0026lt;/DevelopmentServerPort\u0026gt; \u0026lt;DevelopmentServerVPath\u0026gt;/\u0026lt;/DevelopmentServerVPath\u0026gt; \u0026lt;IISUrl\u0026gt;http://XXX.XXX.XXX.XXX/ProjectName\u0026lt;/IISUrl\u0026gt; \u0026lt;NTLMAuthentication\u0026gt;False\u0026lt;/NTLMAuthentication\u0026gt; \u0026lt;UseCustomServer\u0026gt;False\u0026lt;/UseCustomServer\u0026gt; \u0026lt;CustomServerUrl\u0026gt; \u0026lt;/CustomServerUrl\u0026gt; \u0026lt;SaveServerSettingsInUserFile\u0026gt;False\u0026lt;/SaveServerSettingsInUserFile\u0026gt; \u0026lt;/WebProjectProperties\u0026gt;\u0026lt;/code\u0026gt;  原先的 IISUrl 指定到了固定 IP，因此這專案找不到 IIS，故無法載入\n解法 只要把 \u0026lt;IISUrl\u0026gt;http://XXX.XXX.XXX.XXX/ProjectName\u0026lt;/IISUrl\u0026gt; 指定到本機的 IIS 即可\n故改為 \u0026lt;IISUrl\u0026gt;http://localhost:port(1880)\u0026lt;/IISUrl\u0026gt; 即可正常載入專案\n參考來源   https://parg.co/bYcl\n  https://parg.co/bYcY\n  ","id":8,"section":"posts","summary":"第一次遇到此問題，紀錄一下 今天在接手一專案時，從 TFS 上對應本機後，出現下圖訊息 錯誤訊息很明顯，因為專案的設定是會使用 IIS，但在本機上找不到，","tags":null,"title":"TFS - 從 TFS 對應專案檔後無法取得專案問題","uri":"https://stclass10904.github.io/site/2020/06/2020-06-20-e38090tfse38091e5be9e-tfs-e5b08de68789e5b088e6a188e6aa94e5be8ce784a1e6b395e58f96e5be97e5b088e6a188e5958fe9a18c/","year":"2020"},{"content":"MVC 是甚麼 不是一種程式語言也不是框架，而是一種設計模式(design pattern)。 主要的概念就是把應用程式劃分成 Model、View、Controller 三個不可或缺的部分。 MVC 也提供相當大的擴充彈性，依據專案的大小，開發人員可自行增加 Service 或 Repository 等層級，使專案更簡潔明瞭。\nMVC 的優勢與特點 在我接手維護 ASP.NET 的系統中，含有幾套 Web Forms 的專案，而同時也在開發 MVC 的專案，兩者的概念差異頗大，在這邊做個小整理。\n在不同的時空背景下所產生的產物，沒有誰特別優或劣，如果只是為了跟上微軟的腳步而耗費更多的時間去翻寫程式，那我寧願多補眠一點\u0026hellip;\n 來稍微簡單介紹一下 MVC：\nModel 通常中文會稱他為資料模型，是用來封裝跟應用程式的商業邏輯相關的資料，只要是跟資料處理相關的，都算是 Model 的範圍\nModel 是獨立於 View 及 Controller 的，也就是說可以完全切割各自完成自己的工作，而 Model 就是專注做好資料的定義及存取等就好\n目前有使用過相關的技術有：\n  Entity Framwork\n  LINQ to SQL\n  ADO.NET\n  NHibernate\n  Dapper\n  \u0026hellip;\n  View 包含從頁面傳至後端的部分，只要是跟畫面有相關的都歸類在 View 這一塊，而頁面的刻畫盡量簡潔，需要邏輯運算的東西盡量放到後端運作，畫面愈笨愈好!\nView 與 Controller 算是低耦合的關係，View 雖然可以獨立開發，但資料的取得是需要由 Controller 來傳遞的\n相關技術有：\n  Html\n  CSS\n  Html/Razor Helper\n  JavaScript\n  \u0026hellip;\n  Controller 是 Model 與 View 的分水嶺，Controller 接收 Request 後向 Model 取得資料，再經由一些邏輯運算後，將結果回傳至 View 呈現\n因為大部分的邏輯運算都會在 Controller 內運作，會使得 Controller 內的 action 不好維護，所以有些專案會另外實作 Service 層級來解決此問題\n 小結 之後會再慢慢補上對 MVC 的認識，這邊不是在倡導說 MVC 有多好，純粹只是工作上的需要，假如只是想要快速開發一套小系統，Web Form 的確是更好的選擇\n另外，在使用 MVC 時，一定要記得個教材、影片所介紹的，MVC 的根本就是\n","id":9,"section":"posts","summary":"MVC 是甚麼 不是一種程式語言也不是框架，而是一種設計模式(design pattern)。 主要的概念就是把應用程式劃分成 Model、View、Co","tags":null,"title":"MVC - 基本介紹","uri":"https://stclass10904.github.io/site/2020/06/2020-06-19-mvc-e59fbae69cace4bb8be7b4b9/","year":"2020"},{"content":"以下為單檔案上傳的 sample code Script \u0026lt;code\u0026gt; //* 檢查上傳檔案的副檔名及大小 function checkFile(sender) { // 可接受的附檔名 var validExts = new Array('.pdf', '.xls', '.xlsx'); var fileExt = sender.value; fileExt = fileExt.substring(fileExt.lastIndexOf('.')); // 檢查檔案大小 if (validExts.indexOf(fileExt) \u0026gt; 1024 * 1024 * 10) { alert('檔案不可超過10MB'); sender.value = null; return false; } return true; }; }\u0026lt;/code\u0026gt;  Html \u0026lt;code\u0026gt; \u0026lt;input name=\u0026quot;my_file\u0026quot; onchange=\u0026quot;checkfile(this);\u0026quot; type=\u0026quot;file\u0026quot; /\u0026gt;\u0026lt;/code\u0026gt;  Controller \u0026lt;code\u0026gt; //* 接收檔案 HttpPostedFileBase file = (Request.Files != null \u0026amp;\u0026amp; Request.Files.Count \u0026gt; 0) ? Request.Files[0] : null; if(file == null) { msg = \u0026quot;請上傳檔案\u0026quot;; return Json(msg); }\u0026lt;/code\u0026gt;  ","id":10,"section":"posts","summary":"以下為單檔案上傳的 sample code Script \u0026lt;code\u0026gt; //* 檢查上傳檔案的副檔名及大小 function checkFile(sender) { // 可接受的附檔名 var validExts = new Array('.pdf', '.xls', '.xlsx'); var fileExt = sender.value; fileExt = fileExt.substring(fileExt.lastIndexOf('.')); // 檢查檔案大小 if (validExts.indexOf(fileExt) \u0026gt; 1024 * 1024 * 10) { al","tags":["jQuery"],"title":"MVC - 檢查上傳附件的副檔名及大小","uri":"https://stclass10904.github.io/site/2020/06/2020-06-18-mvc-e6aaa2e69fa5e4b88ae582b3e99984e4bbb6e79a84e589afe6aa94e5908de58f8ae5a4a7e5b08f/","year":"2020"},{"content":"知識就是力量。有了靈性知識，人們就可能會體驗到心靈層面上的覺醒。 首先，我必須說，雖然現在是個講求實證的時代，但在看完這本書之後，你有可能會像我一樣：\n更加相信著某些事，即使沒有任何依據\n 大意 米歇醒了，身體不由自主地走向桌前，寫下了暫時離別的餞別語，他慢慢地走向充滿繁星的戶外。在外頭等著他的是一位外表像人，但卻一看就知道不是地球上的任一生物。米歇跟著他上了飛船，也就是我們所想像的幽浮，而他們的目的地，是一個比地球高了整整八個等級的九級星球 - 海奧華。而地球，只是最低等級的一級星球罷了。\n途中，他們探訪了 X3 星球，這顆星球的等級跟地球一樣，擁有我們所認為的高度文明，但卻又異常死寂，原因是因為他們剛經歷了核戰爭。核輻射導致此星球生物突變，原本應該嬌小柔弱無害的動物，變得高大且兇猛。\n前往海奧華途中米歇看到不同星球間上的生態，但似乎都是一級星球，而這只是使者想讓米歇知道，除了地球，的確有其他擁有生物的星球。只是以目前地球的技術，尚未能發現罷了。\n不到 24 小時的時間，他們抵達了目的地。這裡的所有人都是雌雄同體，但外表卻又都趨近於女性，每個人都和藹可親。在這裡，沒有憤怒的氣息，大氣中充斥溫和的芬芳，每個人都充滿了智慧，或者應該說是知識，米歇在這裡體驗了所謂的天堂。他在這裡會見了七位聖賢，聖賢們以及使者告知了米歇一些「事實」，包含了金字塔的秘密、耶穌的降生、亞特蘭迪斯城以及所謂的輪迴等等\u0026hellip;\u0026hellip;。\n結語 在這個講求實事求是的時代，不管相信與否，都要保持住正向心，好好的去體驗這個世界。\n","id":11,"section":"posts","summary":"知識就是力量。有了靈性知識，人們就可能會體驗到心靈層面上的覺醒。 首先，我必須說，雖然現在是個講求實證的時代，但在看完這本書之後，你有可能會像","tags":null,"title":"Reading - 海奧華預言-讀後心得","uri":"https://stclass10904.github.io/site/2020/05/2020-05-19-e6b5b7e5a5a7e88fafe9a090e8a880/","year":"2020"},{"content":"位於海安路上，**「開鍋」**旁的小巷弄裡\n很隱密，導航了還是找不到，最後還是把車停好用走的才找到XD\n餐廳是老屋翻修而成，光是隱藏在巷弄裡就猜想的到他是間有年代的老屋吧!\n🔽菜單\n(每人低消為一份定食)\n定食包含了前菜、沙拉、湯品\n🔽前菜\n開胃菜，生菜沙拉搭配胡麻醬與店家自製的醃蘿蔔\n淡淡的柚子香，吃起來很清爽\n🔽MIJUKU招牌丼 $499\n(裡面包含了鮪魚、鮭魚、旗魚、甜蝦、比目魚、星鰻、干貝、天使紅蝦、日式小菜、玉子燒、蝦卵、柚香鮭魚卵)\n食材豐盛且新鮮，而這家店特別的是使用溫醋飯，有別於大家印象中生魚片就是要搭冷醋飯\n🔽限量玫瑰鮪魚丼\n鮪魚每片都切的好厚阿~\n🔽味增湯\n裡頭有鮭魚\u0026amp;嫩豆腐\n吃完冷食，來碗熱湯暖暖胃~\n整體來說還算不錯，唯一可惜的是蠟筆小新售完了\u0026hellip;\n身為蒸蛋控又是小新粉一定要嚐到啊!!!\n老闆與員工也都很熱情~也因為座位數不多\n所以更能感受到老闆對每位顧客的用心。\n推薦指數:✿✿✿✿\n⦗店家名稱⦘ 味熟 MIJUKU\n⦗店家地址⦘ 台南市中西區海安路二段86巷13號\n⦗店家電話⦘ 06 221 0898\n⦗營業時間⦘ 11:30-14:30/17:30-20:30（售完為止）\n(每月公休日以粉絲專業為主)\n","id":12,"section":"posts","summary":"位於海安路上，**「開鍋」**旁的小巷弄裡 很隱密，導航了還是找不到，最後還是把車停好用走的才找到XD 餐廳是老屋翻修而成，光是隱藏在巷弄裡就猜","tags":["life"],"title":"Life - 味熟 MIJUKU，隱藏巷弄中的日式料理","uri":"https://stclass10904.github.io/site/2020/05/2020-05-14-e591b3e7869f-mijukuefbc8ce99ab1e8978fe5b7b7e5bc84e4b8ade79a84e697a5e5bc8fe69699e79086/","year":"2020"}],"tags":[{"title":"html","uri":"https://stclass10904.github.io/site/tags/html/"},{"title":"jQuery","uri":"https://stclass10904.github.io/site/tags/jquery/"},{"title":"life","uri":"https://stclass10904.github.io/site/tags/life/"},{"title":"read","uri":"https://stclass10904.github.io/site/tags/read/"},{"title":"TANET 2020","uri":"https://stclass10904.github.io/site/tags/tanet-2020/"},{"title":"vue","uri":"https://stclass10904.github.io/site/tags/vue/"}]}